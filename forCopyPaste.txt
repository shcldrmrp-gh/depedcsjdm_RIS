FORM:
<tr colspan="8">
                      <th colspan="1" height="18px" class="stock_number">
                          <input class="stock_number" name="stock_number[]" type="text" readonly>
                      </th>
                      <th colspan="1" class="stock_unit">
                          <input class="stock_unit" name="stock_unit[]" type="text" readonly>
                      </th>  

                    <th>
                        <select class="item_description" name="item_description[]" onfocus='this.size=5;' onblur='this.size=1;' onchange='updateMaxQuantity();'>
                            <option value="noValue"></option>
                            <?php
                                $servername = "localhost";
                                $username = "root";
                                $password = "root";
                                $dbname = "ris_propertyoffice";

                                $conn = mysqli_connect($servername, $username, $password, $dbname);

                                $sql = "SELECT item_description FROM inventory ORDER BY item_description ASC";
                                $result = $conn->query($sql);

                                while ($row = $result->fetch_assoc()) {
                                    echo '<option value="' . $row['item_description'] . '">' . $row['item_description'] . '</option>';
                                }

                                $conn->close();
                            ?>
                        </select>
                    </th>
                    <th class="quantityInput">
                        <div class="quantityInput">
                            <input type="number" max="" pattern="[0-9]*" min="1" name="quantity[]" class="quantityInputUser" oninput="this.value = this.value.replace(/[^0-9]/g, '');">
                        </div>
                    </th>
                    <th class="yesInputCheck"></th>
                    <th class="noInputCheck"></th>
                    <th class="quantityInput"></th>
                    <th class="issuedRemarks"></th>
                </tr>

<div class="generatePDFplacement">
                <button type="submit" onclick="sendDataToDatabase()" id="generatePDF">
                    GENERATE PDF
                </button>
            </div>

generatePdf.js:
let form = document.querySelector("#formContainer");
        let btn = document.querySelector("#generatePDF");
        
        var opt = {
            margin:         [10, -20, -1000, 10],
            filename:       'ris-form.pdf',
            image:          { type: 'jpeg', quality: .95},
            html2canvas:  { scale: 2, allowMagnification: false, width: 1250, height: 2000},
            jsPDF:        { unit: 'mm', format: 'a4', orientation: 'portrait' },
        };

        btn.addEventListener('click', () => {
            
            let clonedForm = $(form).clone();

            $(form).find('select').each(function(index, originalSelect) {
                let clonedSelect = $(clonedForm).find('select').eq(index);
                
                let selectedValue = $(originalSelect).val();
                
                $(clonedSelect).val(selectedValue);
            });

            $(form).append(clonedForm);

            let updateData = [];
            clonedForm.find('.item_description').each(function(index, selectElement) {
                let selectedItem = $(selectElement).val();
                let quantityInput = $(selectElement).closest('tr').find('.quantityInputUser').val();
                let stockNumberInput = $(selectElement).closest('tr').find('.stock_number');
        
                // Get the stock_number from the class
                let stockNumber = $(stockNumberInput).attr('class').split(' ').filter(function(className) {
                    return className.startsWith('stock_number_');
                })[0].replace('stock_number_', ''); // Extract the stock_number value
        
                updateData.push({ item_description: selectedItem, quantity: quantityInput, stock_number: stockNumber });
            });

            // Send AJAX request for each item to update the database
            updateData.forEach(function(data) {
                $.ajax({
                    url: "update_quantity.php",
                    type: "POST",
                    data: data,
                    success: function(response) {
                        console.log(response); // Log the response for debugging purposes
                    },
                    error: function() {
                        console.error("Error updating quantity");
                    },
                });
            });
            
            html2pdf().set(opt).from(form).save().then(() => {
                window.location.reload();
            });
        });

update_quantity.php:
<?php
    // Ensure proper error handling and database connection establishment here.

    // Update the database table 'inventory' to subtract the given quantity from item_quantity.
    $servername = "localhost";
    $username = "root";
    $password = "root";
    $dbname = "ris_propertyoffice";

    $conn = new mysqli($servername, $username, $password, $dbname);

    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $itemDescription = $_POST['item_description'];
        $quantity = $_POST['quantity'];
        $stock_number = $_POST["stock_number"];

        $sql = "UPDATE inventory SET item_quantity = item_quantity - $quantity WHERE item_description = '$itemDescription'";

        if ($conn->query($sql) === TRUE) {
            echo "Quantity updated successfully.";
        } else {
            echo "Error updating quantity: " . $conn->error;
        }
    }

    if ($_SERVER["REQUEST_METHOD"] === "POST") {
        // Retrieve the data sent via POST
        $item_description = $_POST["item_description"];
        $quantity = $_POST["quantity"];
        $stock_number = $_POST["stock_number"];
    
        // Check if the item_description already exists in the usage_logs table
        $sql = "SELECT * FROM usage_logs WHERE item_description = '$item_description'";
        $result = $conn->query($sql);
    
        if ($result->num_rows > 0) {
            // If the item_description exists, update the total_usage
            $row = $result->fetch_assoc();
            $current_total_usage = $row["total_usage"];
            $new_total_usage = $current_total_usage + $quantity;
    
            $update_sql = "UPDATE usage_logs SET total_usage = '$new_total_usage' WHERE item_description = '$item_description'";
            if ($conn->query($update_sql) === TRUE) {
                echo "Quantity updated successfully.";
            } else {
                echo "Error updating quantity: " . $conn->error;
            }
        } else {
            // If the item_description doesn't exist, insert a new row
            $insert_sql = "INSERT INTO usage_logs (stock_number, item_description, total_usage) VALUES ('$stock_number','$item_description', '$quantity')";
            if ($conn->query($insert_sql) === TRUE) {
                echo "Quantity inserted successfully.";
            } else {
                echo "Error inserting quantity: " . $conn->error;
            }
        }
    } else {
        echo "Invalid request.";
    }

    $conn->close();
?>
